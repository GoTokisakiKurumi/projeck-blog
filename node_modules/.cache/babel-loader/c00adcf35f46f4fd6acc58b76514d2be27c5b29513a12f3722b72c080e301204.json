{"ast":null,"code":"var _jsxFileName = \"/data/data/com.termux/files/home/Documents/projeck-blog/src/components/header/Header.js\",\n  _s = $RefreshSig$();\nimport './Header.css';\nimport { BsList } from 'react-icons/bs';\nimport { IconContext } from 'react-icons';\nimport useButtonSide from '../../store/index';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Header = () => {\n  _s();\n  const setButton = useButtonSide(state => state.bears);\n  alert(setButton);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"container header\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: setButton,\n          children: /*#__PURE__*/_jsxDEV(IconContext.Provider, {\n            value: {\n              className: 'icon-button'\n            },\n            children: /*#__PURE__*/_jsxDEV(BsList, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 16,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: require('../../images/profile/kurumi-avatar.png'),\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(Header, \"nmbKuDqpbc5ip4NZ5rVsCf39RGM=\", false, function () {\n  return [useButtonSide];\n});\n_c = Header;\nexport default Header;\nvar _c;\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["BsList","IconContext","useButtonSide","Header","setButton","state","bears","alert","className","require"],"sources":["/data/data/com.termux/files/home/Documents/projeck-blog/src/components/header/Header.js"],"sourcesContent":["import './Header.css';\nimport { BsList } from 'react-icons/bs';\nimport { IconContext } from 'react-icons';\nimport useButtonSide from '../../store/index';\n\nconst Header = () => {\n\n  const setButton = useButtonSide((state) => state.bears)\n  alert(setButton)\n  return (\n    <>\n      <header className='container header'>\n        <ul>\n          <li onClick={setButton}>\n            <IconContext.Provider value={{ className: 'icon-button' }}>\n              <BsList />\n            </IconContext.Provider>\n          </li>\n          <li><img src={require('../../images/profile/kurumi-avatar.png')} alt=\"\" /></li>\n        </ul>\n      </header>\n    </>\n  )\n}\n\nexport default Header;\n"],"mappings":";;AAAA,OAAO,cAAc;AACrB,SAASA,MAAM,QAAQ,gBAAgB;AACvC,SAASC,WAAW,QAAQ,aAAa;AACzC,OAAOC,aAAa,MAAM,mBAAmB;AAAC;AAAA;AAE9C,MAAMC,MAAM,GAAG,MAAM;EAAA;EAEnB,MAAMC,SAAS,GAAGF,aAAa,CAAEG,KAAK,IAAKA,KAAK,CAACC,KAAK,CAAC;EACvDC,KAAK,CAACH,SAAS,CAAC;EAChB,oBACE;IAAA,uBACE;MAAQ,SAAS,EAAC,kBAAkB;MAAA,uBAClC;QAAA,wBACE;UAAI,OAAO,EAAEA,SAAU;UAAA,uBACrB,QAAC,WAAW,CAAC,QAAQ;YAAC,KAAK,EAAE;cAAEI,SAAS,EAAE;YAAc,CAAE;YAAA,uBACxD,QAAC,MAAM;cAAA;cAAA;cAAA;YAAA;UAAG;YAAA;YAAA;YAAA;UAAA;QACW;UAAA;UAAA;UAAA;QAAA,QACpB,eACL;UAAA,uBAAI;YAAK,GAAG,EAAEC,OAAO,CAAC,wCAAwC,CAAE;YAAC,GAAG,EAAC;UAAE;YAAA;YAAA;YAAA;UAAA;QAAG;UAAA;UAAA;UAAA;QAAA,QAAK;MAAA;QAAA;QAAA;QAAA;MAAA;IAC5E;MAAA;MAAA;MAAA;IAAA;EACE,iBACR;AAEP,CAAC;AAAA,GAlBKN,MAAM;EAAA,QAEQD,aAAa;AAAA;AAAA,KAF3BC,MAAM;AAoBZ,eAAeA,MAAM;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}